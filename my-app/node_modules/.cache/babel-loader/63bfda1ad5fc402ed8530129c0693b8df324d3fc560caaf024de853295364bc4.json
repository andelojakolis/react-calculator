{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\An\\u0111elo\\\\Desktop\\\\ReactCalc\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./styles.css\";\nimport DigitButton from \"./DigitButton\";\nimport OperationButton from \"./OperationButton\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ACTIONS = {\n  ADD_DIGIT: \"add-digit\",\n  CHOOSE_OPERATION: \"choose-operation\",\n  CLEAR: \"clear\",\n  DELETE_DIGIT: \"delete-digit\",\n  EVALUATE: \"evaluate\"\n};\nfunction reducer(state, _ref) {\n  let {\n    type,\n    payload\n  } = _ref;\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return {};\n      }\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") return state;\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) return state;\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`\n      };\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state;\n      }\n      if (state.currentOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation\n        };\n      }\n      if (state.previousOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null\n        };\n      }\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null\n      };\n    case ACTIONS.CLEAR:\n      return {};\n    case ACTIONS.EVALUATE:\n      if (state.operation == null || state.currentOperand == null || state.previousOperand == null) return state;\n      return {\n        ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state)\n      };\n  }\n}\nfunction evaluate(_ref2) {\n  let {\n    currentOperand,\n    previousOperand,\n    operation\n  } = _ref2;\n  const prev = parseFloat(previousOperand);\n  const current = parseFloat(currentOperand);\n  if (isNaN(prev) || isNaN(current)) return \"\";\n  let computation = \"\";\n  switch (operation) {\n    case \"+\":\n      computation = prev + current;\n      break;\n    case \"-\":\n      computation = prev - current;\n      break;\n    case \"*\":\n      computation = prev * current;\n      break;\n    case \"÷\":\n      computation = prev / current;\n      break;\n  }\n  return computation.toString();\n}\nfunction App() {\n  _s();\n  const [{\n    currentOperand,\n    previousOperand,\n    operation\n  }, dispatch] = useReducer(reducer, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculatorGrid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previousOperand\",\n        children: [previousOperand, \" \", operation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currentOperand\",\n        children: currentOperand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.CLEAR\n      }),\n      children: \"AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"DEL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"\\xF7\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"1\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"2\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"3\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"*\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"4\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"5\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"6\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"+\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"7\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"8\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"9\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"-\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"0\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \".\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.EVALUATE\n      }),\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"U3IK2u6L5w8LChD4hEs3C1yVO5M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["DigitButton","OperationButton","useReducer","ACTIONS","ADD_DIGIT","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","type","payload","overwrite","digit","currentOperand","includes","previousOperand","operation","evaluate","prev","parseFloat","current","isNaN","computation","toString","App","dispatch"],"sources":["C:/Users/Anđelo/Desktop/ReactCalc/my-app/src/App.js"],"sourcesContent":["import \"./styles.css\";\nimport DigitButton from \"./DigitButton\";\nimport OperationButton from \"./OperationButton\";\nimport { useReducer } from \"react\";\n\nexport const ACTIONS = {\n  ADD_DIGIT: \"add-digit\",\n  CHOOSE_OPERATION: \"choose-operation\",\n  CLEAR: \"clear\",\n  DELETE_DIGIT: \"delete-digit\",\n  EVALUATE: \"evaluate\",\n};\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if(state.overwrite) {\n        return {\n          \n        }\n      }\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") return state;\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\"))\n        return state;\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`,\n      };\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state;\n      }\n      if (state.currentOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n        };\n      }\n      if (state.previousOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null,\n        };\n      }\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null,\n      };\n    case ACTIONS.CLEAR:\n      return {};\n    case ACTIONS.EVALUATE:\n      if (\n        state.operation == null ||\n        state.currentOperand == null ||\n        state.previousOperand == null\n      )\n        return state;\n      return {\n        ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state),\n      };\n  }\n}\n\nfunction evaluate({ currentOperand, previousOperand, operation }) {\n  const prev = parseFloat(previousOperand);\n  const current = parseFloat(currentOperand);\n  if (isNaN(prev) || isNaN(current)) return \"\";\n  let computation = \"\";\n  switch (operation) {\n    case \"+\":\n      computation = prev + current;\n      break;\n    case \"-\":\n      computation = prev - current;\n      break;\n    case \"*\":\n      computation = prev * current;\n      break;\n    case \"÷\":\n      computation = prev / current;\n      break;\n  }\n  return computation.toString();\n}\n\nfunction App() {\n  const [{ currentOperand, previousOperand, operation }, dispatch] = useReducer(\n    reducer,\n    {}\n  );\n\n  return (\n    <div className=\"calculatorGrid\">\n      <div className=\"output\">\n        <div className=\"previousOperand\">\n          {previousOperand} {operation}\n        </div>\n        <div className=\"currentOperand\">{currentOperand}</div>\n      </div>\n      <button\n        className=\"span-two\"\n        onClick={() => dispatch({ type: ACTIONS.CLEAR })}\n      >\n        AC\n      </button>\n      <button>DEL</button>\n      <OperationButton operation=\"÷\" dispatch={dispatch} />\n      <DigitButton digit=\"1\" dispatch={dispatch} />\n      <DigitButton digit=\"2\" dispatch={dispatch} />\n      <DigitButton digit=\"3\" dispatch={dispatch} />\n      <OperationButton operation=\"*\" dispatch={dispatch} />\n      <DigitButton digit=\"4\" dispatch={dispatch} />\n      <DigitButton digit=\"5\" dispatch={dispatch} />\n      <DigitButton digit=\"6\" dispatch={dispatch} />\n      <OperationButton operation=\"+\" dispatch={dispatch} />\n      <DigitButton digit=\"7\" dispatch={dispatch} />\n      <DigitButton digit=\"8\" dispatch={dispatch} />\n      <DigitButton digit=\"9\" dispatch={dispatch} />\n      <OperationButton operation=\"-\" dispatch={dispatch} />\n      <DigitButton digit=\"0\" dispatch={dispatch} />\n      <DigitButton digit=\".\" dispatch={dispatch} />\n      <button\n        className=\"span-two\"\n        onClick={() => dispatch({ type: ACTIONS.EVALUATE })}\n      >\n        =\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}